
# AWS LightSail / Ubuntu, 12 Dec 2022

apt install \
  build-essential libreadline-dev zlib1g-dev flex bison libxml2-dev \
  libxslt-dev libssl-dev libxml2-utils xsltproc ccache \
  libzstd-dev uuid-dev libsystemd-dev

wget https://ftp.postgresql.org/pub/source/v15.1/postgresql-15.1.tar.bz2
tar xf postgresql-15.1.tar.bz2
rm postgresql-15.1.tar.bz2

cd postgresql-15.1
nano src/include/common/scram-common.h   #define SCRAM_DEFAULT_ITERATIONS        1

./configure --with-zstd --with-openssl --with-icu --with-systemd --with-uuid=e2fs

make
make install
adduser --disabled-login postgres
mkdir -p /usr/local/pgsql/data
chown postgres /usr/local/pgsql/data

su - postgres
/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data

mkdir /var/run/postgresql
chown postgres /var/run/postgresql

# and for future reboots:
echo 'd /var/run/postgresql 0755 postgres postgres -' > /usr/lib/tmpfiles.d/postgresql.conf

nano /usr/local/pgsql/data/postgresql.conf
# change:
unix_socket_directories = '/var/run/postgresql'

# https://www.postgresql.org/docs/current/server-start.html
echo '
[Unit]
Description=PostgreSQL database server
Documentation=man:postgres(1)
After=network-online.target
Wants=network-online.target

[Service]
Type=notify
User=postgres
ExecStart=/usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data
ExecReload=/bin/kill -HUP $MAINPID
KillMode=mixed
KillSignal=SIGINT
TimeoutSec=infinity

[Install]
WantedBy=multi-user.target
' > /lib/systemd/system/postgresql.service

# systemctl unmask postgresql  # only if postgres was previously installed by apt?
service postgresql start

/usr/local/pgsql/bin/createdb main

/usr/local/pgsql/bin/createuser wsscram --pwprompt
/usr/local/pgsql/bin/createuser wsclear --pwprompt

nano /usr/local/pgsql/data/pg_hba.conf

# == replace ==
local   all             all                                     trust

# == with ==
local   all             postgres                                trust

local   all             wsclear                                 password
local   all             all                                     scram-sha-256

host    all             wsclear         127.0.0.1/32            password
host    all             all             127.0.0.1/32            scram-sha-256

echo '
#!/bin/bash
umask 0177
DOMAIN=ws.manipulexity.com
DATA_DIR=/usr/local/pgsql/data
cp /etc/letsencrypt/live/$DOMAIN/fullchain.pem $DATA_DIR/server.crt
cp /etc/letsencrypt/live/$DOMAIN/privkey.pem $DATA_DIR/server.key
chown postgres:postgres $DATA_DIR/server.crt $DATA_DIR/server.key
service postgresql reload
service pgbouncer reload
' > /etc/letsencrypt/renewal-hooks/deploy/postgresql.deploy

chmod +x /etc/letsencrypt/renewal-hooks/deploy/postgresql.deploy
certbot renew --force-renewal

echo "
log_destination = 'syslog'
ssl = on
ssl_cert_file = 'server.crt'
ssl_key_file = 'server.key'
" >> /usr/local/pgsql/data/postgresql.conf

service postgresql restart

ln -s /var/run/postgresql/.s.PGSQL.5432 /tmp/  # psql still imagines it's at /tmp/

su - postgres

psql

set password_encryption = 'md5';
alter role wsclear with login password '...';

grant all privileges on database main to wsscram;
grant all privileges on database main to wsclear;

\c main
grant all privileges on schema public to wsscram;
grant all privileges on schema public to wsclear;

echo '127.0.0.1 ws.manipulexity.com' >> /etc/hosts


# postgis

apt install libgeos-dev libproj-dev libgdal-dev

git clone https://github.com/json-c/json-c.git
mkdir json-c-build
cd json-c-build
cmake ../json-c
make
make test
make install

wget https://download.osgeo.org/postgis/source/postgis-3.3.2.tar.gz
tar xf postgis-3.3.2.tar.gz
rm postgis-3.3.2.tar.gz
cd postgis-3.3.2
PG_CONFIG=/usr/local/pgsql/bin/pg_config ./configure --without-protobuf
make
make install
